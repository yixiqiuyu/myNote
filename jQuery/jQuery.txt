jQuery（JavaScript框架）
框架：对现有代码的封装，便于后续的重复利用，提高开发效率
jQuery是一个JavaScript框架

好处：
	简化了JavaScript开发 document.getElementById("");
	屏蔽浏览器差异 IE WebKit（FF Chrome Safari）

使用jQuery：
	1.通过script标签引入外部js文件
		<script type="text/javascript" src="jquery-1.8.3.js"></script>
	2.在另外一个script标签中使用jQuery函数
		根据id获得对应标签对象的方法：
			ID选择器：$("#id")  //通过id获取标签对象
			jq.text*=(); //获取标签体内部的文字---相当于：dom对象.innerHTML
			jq.css("css属性名","css属性值");//为当前标签对象添加样式
	3.通过js代码获得dom对象和jQuery获得jQuery对象
		dom对象.js属性或方法
		jq对象.js属性或方法
		
		如何获取一个jQuery对象
			1）通过jq选择器获得jQuery对象
			2）通过dom对象获得jQuery对象
			3）通过$("标签文本")，创建新的jq对象  $("<td></td>")

第一个jQuery程序
搭建开发环境
	<script type="text/javascript" src="jquery js文件的路径"></script>
jQuery语法的特点
	简单
	直观
	支持链式调用
	

jQuery选择器
1.基本选择器	
	ID选择器：$("#ID值")
	元素选择器：$("标签名")
	类选择器：$(".样式类名")
2.层级选择器
	*jQuery对于多选择器共存时的解析规则：从左到右依次解析
	$("selectorA selectorB")  //后代选择器
	$("selectorA>selectorB")  //父子选择器
	$("selectorA+selectorB")  //紧邻的后续兄弟选择器
	$("selectorA~selectorB")  //所有后续兄弟选择器
3.简单过滤选择器
	:first  在已有范围中选取第一个
	:last  在已有范围中选取最后一个
	:eq(index)  在已有范围中选取对应的索引位置上的元素
	:gt(index)  在已有范围中选取索引大于对应的索引位置上的元素
	:lt(index)  在已有范围中选取索引小于对应的索引位置上的元素
	:even  在已有范围中选取索引为偶数的元素
	:odd  在已有范围中选取索引为奇数的元素
	:not(selectorA)  在已有范围中剔除掉selectorA元素
4.内容过滤选择器  ---内容：字标签/标签体中文本
		:empty  在已有范围中选取出没有标签体的元素
		:parent  （是父亲）在已有范围中选取出含有标签体的元素
		:constains(text)  在已有范围中选取出含有对应文本的元素
		:has(selector)  在已有范围中选取出含有selectorA后代的元素
5.可见性过滤选择器
		:visible  过滤出可见元素
		:hidden  过滤出隐藏元素（包含隐藏域）
6.属性过滤器
	[属性名]  选取出含有该属性的元素
	[属性名=属性值]  选取出属性值为指定值的元素
		*表单属性过滤选择器：
			:checked  适用于 单选按钮和复选按钮
			:sekected  适用于 下拉列表被选择的选项
7.表单选择器
	:test  获得所有的文本输入框
	:checkbox 获得所有的复选框
8.遍历
	var spans=$("spans");//选择全部的span标签
	//遍历多个元素
	for(var i=0;i<spans.size();i++){
		//获取当前元素
		var s=spans.get(i);
		//通过get方法获取的是dom对象（JavaScript对象）
		console.log(s.innerHTML);
	}
9.遍历筛选附近元素	
	parent();  返回指定元素的父标签
	children();  返回指定元素的所有子元素
	next();  返回后一个兄弟
	prev();  返回前一个兄弟


事件绑定
HTML注册事件
	function clicked(){
		xxxxx
	}
	<input type="button" value="click_me" id="btn" onclick="clicked()"/>
JavaScript注册事件
	window.onload=function(){
		//注册onload事件，在文档加载完成后出发执行
		var btn=document.getElementById("btn");
		btn.onclick=function(){
			//对btn注册单击事件
			xxxxx
		}
	}
	<input type="button" value="click_me" id="btn">
		*注意：在事件注册时，必须保证事件源已经被加载了
jQuery注册事件
	$(document).ready(function(){//在文档加载完成后触发执行
		$("#btn").click(function{
			//单击事件后执行的函数体
		});
	});
	<input type="button" value="click_me" id="btn"/>
		
		
jQuery事件函数	
事件函数
	click();  单击
	dblclick();  双击
	focus();  获得焦点
	blur();  失去焦点
	mouseover();  鼠标移入
	mouseout();  鼠标移出
	mousemove();  鼠标移动
	mousedown();  鼠标左键按下
	mouseup();  鼠标左键抬起
	change();  内容改变并失去焦点
其他事件 
	*toggle(fn1,fn2,fn3,...):{事件函数}复合的单击事件，当第一次被单击时触发fn1
								第二次单击触发fn2依次类推，可循环
	*hover(fn1,fn2):一次性的注册mouseover和mouseout事件
					当鼠标移入时执行fn1，当鼠标移出时执行fn2
	*submit();  提交form
		$("form").submit();

DOM编程
添加
	append(html);  向内部最后一个位置追加子标签
	prepend(html);  向内部第一个位置追加子标签
	before(html);  在之前追加一个兄弟标签
	after(html);  在之后追加一个兄弟标签
删除
	empty();  清空子标签
	remove();  删除自己
修改（替换）
		*input 标签的type属性是只读属性，不允许更改
	val(); //获取元素的value值
	val(String); //设置元素的value属性值
	text(); //获取元素标签体内部的文本
	text(String); //设置标签体内的文本
	html(); //获取元素内部的HTML代码
	html(html); //设置元素内部的HTML代码
	css("样式属性名"); //获取属性值
	css("样式属性名","属性值"); //设置对应的属性值
	css({"样式属性名","属性值","样式属性名","属性值"...});
	addClass(样式类名); //增加样式类
	removeClass(样式类名); //移除样式类
	attr("属性名"); //获取属性值
	attr("属性名","属性值"); //设置对应的属性值
	attr({"属性名","属性值","属性名","属性值"...});
	prop("属性名") //获取属性值（适用于获取Boolean类型的属性值）
	prop("属性名"，true/false); //设置Boolean类型的属性的值
		*注意：在获取、设置Boolean类型的属性时attr存在问题，此时可使用
		prop方法，prop方法时jquery-1.7.x之后对于attr的补充
事件问题
	$("#xxx").click()  .change()   .blur()
		只能为现有的标签假如事件处理，但是通过jQuery程序动态创建的内容，
		事件是添加不上的
	使用live()函数解决上述问题
		$("#btn").live("click",function(){xxx});
		$("#btn").live("change",function(){xxx});
		$("#btn").live("blur",function(){xxx});
jquery的动画管理
	show([1000])  显示
	hide([1000])  隐藏
	fadeIn([1000])  淡入
	fadeOut([1000])  淡出
	slideDown([1000])  下滑显示
	slideUp([1000])  上滑隐藏



My97DatePicker日期插件
	//1.导入外部的WdatePicker.js文件，其他文件目录不需要修改
	<script type="text/javascript" src="My97DatePicker.js"></script>
	//2.为标签通过单击事件绑定事件
	<input class="Wdate" type="text" onclick="WdatePicker"/>
	{
		dateFmt;"yyyy年MM月dd日 HH：mm：ss",
		readOnly:true,
		isShowWeek:true
	}
放大镜插件
	1.引入相关的js文件 css文件
	2.$("#超级连接id").jqzoom({
		zoomWidth:200;
		zoomHeight:200
	});
表单验证插件
	1.引入相关js文件
	2.添加验证
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	